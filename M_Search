int M_Search(int a[], int b[], int n)
{
	int h1 = 0, m1, t1 = n - 1;                 //分别指向 头、中位数、尾 的数组元素序号
	int h2 = 0, m2, t2 = n - 1;

	while (h1 != t1 || h2 != t2)                //仅当 都剩一个元素的时候 退出循环，单独操作特殊情况
	{
		m1 = (h1 + t1) / 2;                       //寻找当前两个子列的中位数位置
		m2 = (h2 + t2) / 2;
		if (a[m1] == b[m2])                       //恰好相等则直接得出结果
			return a[m1];
		if (a[m1] < b[m2])                        //如若不等，则继续截短两个数列，并保持其长度不变
		{
			if ((h1 + t1) % 2 == 0)
			{
				h1 = m1;
				t2 = m2;
			}
			else
			{
				h1 = m1 + 1;
				t2 = m2;
			}
		}
		else
		{
			if ((h2 + t2) % 2 == 0)
			{
				h2 = m2;
				t1 = m1;
			}
			else
			{
				h2 = m2 + 1;
				t1 = m1;
			}
		}
	}

	return a[t1] < b[t2] ? a[t1] : a[t2];
}
